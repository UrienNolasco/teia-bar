generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String      @unique
  emailVerified DateTime?
  image         String?
  tipo          TipoUsuario?
  accounts      Account[]
  sessions      Session[]
  consumos      Consumo[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  ConsumoHistorico ConsumoHistorico[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Produto {
  id                String    @id @default(uuid())
  nome              String
  descricao         String?
  valor             Decimal   @db.Decimal(10, 2)
  quantidadeEstoque Int
  criadoEm          DateTime  @default(now())
  imageUrl          String?
  consumos          Consumo[]
  consumoHistoricos ConsumoHistorico[]
}

model Consumo {
  id         String   @id @default(uuid())
  usuarioId  String
  produtoId  String
  quantidade Int
  valorTotal Decimal  @db.Decimal(10, 2)
  criadoEm   DateTime @default(now())
  produto    Produto  @relation(fields: [produtoId], references: [id])
  user       User     @relation(fields: [usuarioId], references: [id])
}

model ConsumoHistorico {
  id               String   @id @default(uuid())
  usuarioId        String
  produtoId        String
  quantidade       Int
  valorTotal       Decimal  @db.Decimal(10, 2)
  criadoEm   DateTime @default(now())
  produto    Produto  @relation(fields: [produtoId], references: [id])
  user       User     @relation(fields: [usuarioId], references: [id])
}

enum TipoUsuario {
  ADMIN
  COMUM
}
